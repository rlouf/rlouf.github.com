<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>/dev/null</title>
    <link>http://rlouf.github.com/</link>
    <description>Recent content on /dev/null</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Sep 2020 19:09:52 +0200</lastBuildDate><atom:link href="http://rlouf.github.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introducing MCX</title>
      <link>http://rlouf.github.com/post/mcx_introducing/</link>
      <pubDate>Fri, 25 Sep 2020 19:09:52 +0200</pubDate>
      
      <guid>http://rlouf.github.com/post/mcx_introducing/</guid>
      <description>Designing a user-friendly API for a Probabilistic Programming Language (PPLs) is cursed by the deceiving simplicity of the mathematical representation of graphical models. Take a simple Beta-Binomial model:
p ~ Beta(1, 2) b ~ Binomial(p) Looking at these equations you are able to comprehend what they represent, and their consequences. But these equations are only descriptive, they do not allow us to compute anything. To manipulate these models in a useful way we need to extract at least two different representations of this object: one that draws samples form the prior joint distribution, and the log-probability density function.</description>
    </item>
    
    <item>
      <title>Designing modular inference engines: API for the HMC kernel</title>
      <link>http://rlouf.github.com/post/ppl_integrator_api/</link>
      <pubDate>Thu, 13 Feb 2020 09:13:38 +0100</pubDate>
      
      <guid>http://rlouf.github.com/post/ppl_integrator_api/</guid>
      <description>Update (20/12/2020): MCX’s inference core is being moved to BlackJAX, a joint project with the Numpyro and PyMC devs.
I have been working on a probabilistic programming library, MCX (don&amp;rsquo;t use it yet, most of the inference engine is in API prototype stage) for the past few weeks. The library is based on source code transformation: you express the model as a python function, and a compiler reads the function, applies the necessary transformations and outputs either a function that generates samples from this distribution, or its logpdf.</description>
    </item>
    
    <item>
      <title>Massively parallel MCMC with JAX</title>
      <link>http://rlouf.github.com/post/jax-random-walk-metropolis/</link>
      <pubDate>Thu, 09 Jan 2020 13:19:11 +0100</pubDate>
      
      <guid>http://rlouf.github.com/post/jax-random-walk-metropolis/</guid>
      <description>TL;DR Edit on 2020/10/01: As pointed out by Matthew Johnson and Hector Yee, the results reported in a previous version of this post were artificially biaised in favor of JAX due to my code not &amp;ldquo;advancing&amp;rdquo; the random number generator. I updated all curves and numbers, and added a little word of caution regarding the use of JAX&amp;rsquo;s pseudo-random number generator.
The code necessary to reproduce the results can be found here.</description>
    </item>
    
    <item>
      <title>The Engine: a framework for growth</title>
      <link>http://rlouf.github.com/post/growth-model/</link>
      <pubDate>Mon, 05 Nov 2018 22:00:10 +0100</pubDate>
      
      <guid>http://rlouf.github.com/post/growth-model/</guid>
      <description>A popular set of metrics against which growth of applications can be measured is the &amp;ldquo;pirate metrics&amp;rdquo;, or AARRR metrics:
 Acquisition: the number of users who get in your application every day; Activation: the proportion of these users who perform a meaningful action. For a music streaming app it could be to play at least one song entirely. For a food delivery service, placing an order; Retention: the proportion of users who are still there after 1, 7, 30 days, etc1; Referral: The proportion of users who refer the application to potential users; Revenue: the proportion of users who pay for your service.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://rlouf.github.com/post/grief/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rlouf.github.com/post/grief/</guid>
      <description>You&amp;rsquo;ve never really paid attention to textures before. Not until now, sat on the floor of the hospital. Obstetrics, deafening neon lights and that green, speckled linoleum. Who could have guess it was that soft on touch? You press on it with your arched fingers, to find balance. There’s a scratch running under your right index. It is sore from biting your nails to the skin. The pain grounds you, so you don’t move.</description>
    </item>
    
  </channel>
</rss>
